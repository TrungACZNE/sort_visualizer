var Files = {"mergesort": "function merge(left, right){\n  var result = [],\n      lLen = left.length,\n      rLen = right.length,\n      l = 0,\n      r = 0;\n  while(l < lLen && r < rLen){\n     if(left[l] < right[r]){\n       result.push(left[l++]);\n     }\n     else{\n       result.push(right[r++]);\n    }\n  }  \n  //remaining part needs to be addred to the result\n  return result.concat(left.slice(l)).concat(right.slice(r));\n}\n\nfunction mergeSort(arr){\n   var len = arr.length;\n   if(len <2)\n      return arr;\n   var mid = Math.floor(len/2),\n       left = arr.slice(0,mid),\n       right =arr.slice(mid);\n   //send left and right to the mergeSort to broke it down into pieces\n   //then merge those\n   return merge(mergeSort(left),mergeSort(right));\n}", "quicksort": "function partition(arr, pivot, left, right){\n   var pivotValue = arr[pivot],\n       partitionIndex = left;\n\n   for(var i = left; i < right; i++){\n    if(arr[i] < pivotValue){\n      swap(arr, i, partitionIndex);\n      partitionIndex++;\n    }\n  }\n  swap(arr, right, partitionIndex);\n  return partitionIndex;\n}\n \nfunction quickSort(arr, left, right){\n   var len = arr.length,\n   pivot,\n   partitionIndex;\n\n\n  if(left < right){\n    pivot = right;\n    partitionIndex = partition(arr, pivot, left, right);\n\n   //sort left and right\n   quickSort(arr, left, partitionIndex - 1);\n   quickSort(arr, partitionIndex + 1, right);\n  }\n  return arr;\n}\n\nfunction sort(arr) {\n    return quickSort(arr, 0, arr.length - 1);\n}\n"}
module.exports = Files;
